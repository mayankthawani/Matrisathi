"use client";

import { Card, CardContent } from "@/components/ui/card";
import { ArrowLeft, Heart, Sparkles, CheckCircle, XCircle, Baby, AlertTriangle, Shield } from "lucide-react";
import { useRouter } from "next/navigation";
import Navbar from "@/components/Navbar";
import Downbar from "@/components/Downbar";

export default function IEC3Page() {
  const router = useRouter();

  const learningCards = [
    {
      id: "important",
      title: "рдорд╣рддреНрд╡рдкреВрд░реНрдг рдмрд╛рддреЗрдВ",
      emoji: "ЁЯМЯ",
      icon: Heart,
      gradient: "from-purple-400 to-indigo-500",
      bgGradient: "from-purple-50 to-indigo-50",
      borderColor: "border-purple-200",
      content: [
        { text: "рдмрдЪреНрдЪрд╛ рддреЗрдЬреА рд╕реЗ рдмрдврд╝рддрд╛ рд╣реИ", emoji: "ЁЯС╢" },
        { text: "рд╢рд░реАрд░ рдореЗрдВ рдмрджрд▓рд╛рд╡ рдФрд░ рдердХрд╛рди рд╕рд╛рдорд╛рдиреНрдп рд╣реИ", emoji: "ЁЯШ┤" },
        { text: "рднрд╛рд╡рдирд╛рддреНрдордХ рдкрд░рд┐рд╡рд░реНрддрди рд╣реЛрддреЗ рд╣реИрдВ", emoji: "ЁЯШКЁЯШв" }
      ]
    },
    {
      id: "health-care",
      title: "рд╕реНрд╡рд╛рд╕реНрдереНрдп рджреЗрдЦрднрд╛рд▓",
      emoji: "ЁЯПе",
      icon: CheckCircle,
      gradient: "from-green-400 to-emerald-500",
      bgGradient: "from-green-50 to-emerald-50",
      borderColor: "border-green-200",
      content: [
        { text: "рдирд┐рдпрдорд┐рдд рдбреЙрдХреНрдЯрд░ рдХреА рдЬрд╛рдВрдЪ рдХрд░рд╡рд╛рдПрдВ", emoji: "ЁЯСйтАНтЪХя╕П" },
        { text: "рдердХрд╛рди рд╣реЛрдиреЗ рдкрд░ рддреБрд░рдВрдд рдЖрд░рд╛рдо рдХрд░реЗрдВ", emoji: "ЁЯЫМ" },
        { text: "рд╕рдВрддреБрд▓рд┐рдд рдЖрд╣рд╛рд░ рд▓реЗрдВ", emoji: "ЁЯеЧ" },
        { text: "рдкрд░реНрдпрд╛рдкреНрдд рдкрд╛рдиреА рдкрд┐рдПрдВ", emoji: "ЁЯТз" },
        { text: "рд╕рд╛рдл-рд╕рдлрд╛рдИ рд░рдЦреЗрдВ", emoji: "ЁЯз╝" },
        { text: "рд▓рдВрдмреА рдпрд╛рддреНрд░рд╛рдУрдВ рд╕реЗ рдмрдЪреЗрдВ", emoji: "тЬИя╕П" }
      ]
    },
    {
      id: "body-changes",
      title: "рд╢рд╛рд░реАрд░рд┐рдХ рдмрджрд▓рд╛рд╡",
      emoji: "ЁЯд░",
      icon: Baby,
      gradient: "from-pink-400 to-rose-500",
      bgGradient: "from-pink-50 to-rose-50",
      borderColor: "border-pink-200",
      content: [
        { text: "рд╕рд╛рдВрд╕ рд▓реЗрдиреЗ рдореЗрдВ рджрд┐рдХреНрдХрдд - рдЖрд░рд╛рдорджрд╛рдпрдХ рд╕реНрдерд┐рддрд┐ рдореЗрдВ рд░рд╣реЗрдВ", emoji: "ЁЯШотАНЁЯТи" },
        { text: "рдкреАрда рджрд░реНрдж - рд╣рд▓реНрдХреА рд╕рд┐рдХрд╛рдИ рдФрд░ рдЖрд░рд╛рдо", emoji: "ЁЯФЩ" },
        { text: "рдкреИрд░реЛрдВ рдореЗрдВ рд╕реВрдЬрди - рдкреИрд░ рдКрдБрдЪрд╛ рд░рдЦреЗрдВ", emoji: "ЁЯж╡" },
        { text: "рдмрд╛рд░-рдмрд╛рд░ рдкреЗрд╢рд╛рдм рдЖрдирд╛ рд╕рд╛рдорд╛рдиреНрдп рд╣реИ", emoji: "ЁЯЪ╜" },
        { text: "рдЕрдкрдЪ - рд╣рд▓реНрдХрд╛ рдФрд░ рдмрд╛рд░-рдмрд╛рд░ рднреЛрдЬрди", emoji: "ЁЯН╜я╕П" }
      ]
    },
    {
      id: "emotional",
      title: "рднрд╛рд╡рдирд╛рддреНрдордХ рд╕реНрд╡рд╛рд╕реНрдереНрдп",
      emoji: "ЁЯТЭ",
      icon: Heart,
      gradient: "from-yellow-400 to-orange-500",
      bgGradient: "from-yellow-50 to-orange-50",
      borderColor: "border-yellow-200",
      content: [
        { text: "рддрдирд╛рд╡ - рдзреНрдпрд╛рди, рдпреЛрдЧ рдпрд╛ рд╕рдВрдЧреАрдд рд╕реЗ рд░рд╛рд╣рдд", emoji: "ЁЯзШтАНтЩАя╕П" },
        { text: "рдбрд░ - рдЕрдиреБрднрд╡реА рд╡реНрдпрдХреНрддрд┐ рд╕реЗ рдмрд╛рдд рдХрд░реЗрдВ", emoji: "ЁЯЧгя╕П" },
        { text: "рдкрд░рд┐рд╡рд╛рд░ рдХрд╛ рд╕рд╣рдпреЛрдЧ рд▓реЗрдВ", emoji: "ЁЯСк" }
      ]
    },
    {
      id: "delivery-prep",
      title: "рдкреНрд░рд╕рд╡ рдХреА рддреИрдпрд╛рд░реА",
      emoji: "ЁЯОп",
      icon: CheckCircle,
      gradient: "from-blue-400 to-cyan-500",
      bgGradient: "from-blue-50 to-cyan-50",
      borderColor: "border-blue-200",
      content: [
        { text: "рдкреНрд░рд╕рд╡ рдХрдХреНрд╖рд╛рдПрдВ рдЬреНрд╡рд╛рдЗрди рдХрд░реЗрдВ", emoji: "ЁЯСйтАНЁЯПл" },
        { text: "рдЕрд╕реНрдкрддрд╛рд▓ рдХрд╛ рдЪреБрдирд╛рд╡ рдХрд░реЗрдВ", emoji: "ЁЯПе" },
        { text: "рдЬрд░реВрд░реА рдЪреАрдЬреЗрдВ рддреИрдпрд╛рд░ рд░рдЦреЗрдВ", emoji: "ЁЯОТ" },
        { text: "рдмрдЪреНрдЪреЗ рдХреЗ рдХрдкрдбрд╝реЗ рдФрд░ рд╕рд╛рдорд╛рди рдЦрд░реАрджреЗрдВ", emoji: "ЁЯСХ" }
      ]
    },
    {
      id: "precautions",
      title: "рдмрдЪрд╛рд╡ рдФрд░ рд╕рд▓рд╛рд╣",
      emoji: "ЁЯЪл",
      icon: Shield,
      gradient: "from-red-400 to-pink-500",
      bgGradient: "from-red-50 to-pink-50",
      borderColor: "border-red-200",
      content: [
        { text: "рдзреВрдореНрд░рдкрд╛рди рдФрд░ рд╢рд░рд╛рдм рд╕реЗ рджреВрд░ рд░рд╣реЗрдВ", emoji: "ЁЯЪн" },
        { text: "рдХреИрдлреАрди рдХрд╛ рд╕реЗрд╡рди рдХрдо рдХрд░реЗрдВ", emoji: "тШХ" },
        { text: "рдбреЙрдХреНрдЯрд░ рдХреА рд╕рд▓рд╛рд╣ рд▓реЗрдВ", emoji: "ЁЯСйтАНтЪХя╕П" },
        { text: "рд╕рдорд╕реНрдпрд╛ рд╣реЛ рддреЛ рддреБрд░рдВрдд рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ", emoji: "ЁЯУЮ" }
      ]
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-[#FFF4F4] via-[#FFF8F8] to-[#F8F4FF] w-full max-w-sm mx-auto md:max-w-4xl lg:max-w-6xl">
      <Navbar />

      <div className="pt-8 pb-32 px-6 md:px-12 lg:px-20 md:pt-12 md:pb-40">
        {/* Back Button */}
        <button
          className="flex items-center text-base text-[#9E79B9] mb-6 font-mukta font-semibold hover:scale-105 transition-transform md:text-lg"
          onClick={() => router.back()}
        >
          <ArrowLeft className="w-5 h-5 mr-2 md:w-6 md:h-6" />
          рд╡рд╛рдкрд╕ рдЬрд╛рдПрдВ
        </button>

        {/* Enhanced Header */}
        <div className="text-center mb-10 md:mb-16">
          <div className="flex items-center justify-center gap-2 mb-6 md:mb-8">
            <div className="w-16 h-16 bg-gradient-to-r from-[#9E79B9] to-[#B899D1] rounded-full flex items-center justify-center md:w-20 md:h-20">
              <span className="text-2xl md:text-3xl">ЁЯд░</span>
            </div>
            <Sparkles className="text-[#9E79B9] animate-pulse" size={24} />
          </div>
          
          <h1 className="text-2xl font-bold text-[#9E79B9] mb-4 font-mukta leading-tight md:text-3xl lg:text-4xl">
            рдЧрд░реНрднрд╛рд╡рд╕реНрдерд╛ рдХреА рддреГрддреАрдп рддрд┐рдорд╛рд╣реА<br />
            <span className="text-lg md:text-xl lg:text-2xl text-gray-600">(6-9 рдорд╣реАрдиреЗ)</span>
          </h1>
          
          <p className="text-gray-600 text-base font-noto leading-relaxed px-2 md:text-lg lg:text-xl md:px-0 max-w-3xl mx-auto">
            рдЕрдВрддрд┐рдо рдЪрд░рдг рдореЗрдВ рдкреНрд░рд╕рд╡ рдХреА рддреИрдпрд╛рд░реА рдФрд░ рд╡рд┐рд╢реЗрд╖ рджреЗрдЦрднрд╛рд▓ рдХреА рдЬрд╛рдирдХрд╛рд░реА
          </p>
        </div>

        {/* Interactive Learning Cards */}
        <div className="grid grid-cols-1 gap-6 md:grid-cols-2 md:gap-8 max-w-6xl mx-auto">
          {learningCards.map((card, index) => {
            const IconComponent = card.icon;
            return (
              <Card
                key={card.id}
                className={`bg-gradient-to-r ${card.bgGradient} ${card.borderColor} border-2 rounded-2xl shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300 group overflow-hidden md:rounded-3xl`}
                style={{ animationDelay: `${index * 150}ms` }}
              >
                <CardContent className="p-6 relative md:p-8">
                  {/* Background decoration */}
                  <div className="absolute top-0 right-0 w-20 h-20 bg-white/20 rounded-full -translate-y-10 translate-x-10"></div>
                  
                  {/* Header */}
                  <div className="flex items-center gap-4 mb-6 md:mb-8">
                    <div className={`w-14 h-14 bg-gradient-to-r ${card.gradient} rounded-2xl flex items-center justify-center group-hover:rotate-12 transition-transform duration-300 shadow-lg md:w-16 md:h-16`}>
                      <span className="text-2xl md:text-3xl">{card.emoji}</span>
                    </div>
                    <h3 className="font-bold text-xl text-gray-800 font-mukta group-hover:text-[#9E79B9] transition-colors md:text-2xl">
                      {card.title}
                    </h3>
                  </div>

                  {/* Content */}
                  <div className="space-y-4">
                    {card.content.map((item, idx) => (
                      <div 
                        key={idx} 
                        className="flex items-start gap-3 p-3 bg-white/50 rounded-xl hover:bg-white/80 transition-colors cursor-pointer group/item"
                      >
                        <span className="text-xl flex-shrink-0 group-hover/item:scale-125 transition-transform">
                          {item.emoji}
                        </span>
                        <p className="text-gray-700 font-noto text-sm leading-relaxed md:text-base">
                          {item.text}
                        </p>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            );
          })}
        </div>

        {/* Emergency Contact Section */}
        <div className="mt-12 md:mt-20 max-w-4xl mx-auto">
          <Card className="bg-gradient-to-r from-red-50 to-pink-50 border-red-200 border-2 rounded-2xl shadow-lg md:rounded-3xl">
            <CardContent className="p-6 md:p-12">
              <div className="flex items-start gap-4 md:gap-6">
                <div className="w-12 h-12 bg-gradient-to-r from-red-400 to-pink-400 rounded-full flex items-center justify-center flex-shrink-0 md:w-16 md:h-16">
                  <AlertTriangle className="text-white" size={24} />
                </div>
                <div>
                  <h3 className="font-bold text-lg text-gray-800 font-mukta mb-3 md:text-xl lg:text-2xl">
                    рдЖрдкрд╛рддрдХрд╛рд▓реАрди рд╕рдВрдкрд░реНрдХ
                  </h3>
                  <div className="space-y-3">
                    <div className="flex items-start gap-3 p-3 bg-white/70 rounded-xl">
                      <span className="text-lg">ЁЯЪи</span>
                      <p className="text-gray-700 font-noto text-sm md:text-base">
                        рддреЗрдЬ рджрд░реНрдж, рдЦреВрди рдЖрдирд╛ рдпрд╛ рдЕрдЪрд╛рдирдХ рдкрд╛рдиреА рдирд┐рдХрд▓рдирд╛
                      </p>
                    </div>
                    <div className="flex items-start gap-3 p-3 bg-white/70 rounded-xl">
                      <span className="text-lg">ЁЯУЮ</span>
                      <p className="text-gray-700 font-noto text-sm md:text-base">
                        рддреБрд░рдВрдд рдбреЙрдХреНрдЯрд░ рдпрд╛ рдЕрд╕реНрдкрддрд╛рд▓ рд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Delivery Checklist */}
        <div className="mt-8 md:mt-12 max-w-4xl mx-auto">
          <Card className="bg-gradient-to-r from-green-50 to-emerald-50 border-green-200 border-2 rounded-2xl shadow-lg md:rounded-3xl">
            <CardContent className="p-6 md:p-12">
              <div className="text-center mb-6">
                <div className="w-12 h-12 bg-gradient-to-r from-green-400 to-emerald-400 rounded-full flex items-center justify-center mx-auto mb-4 md:w-16 md:h-16">
                  <span className="text-2xl">ЁЯУЛ</span>
                </div>
                <h3 className="font-bold text-lg text-gray-800 font-mukta md:text-xl lg:text-2xl">
                  рдкреНрд░рд╕рд╡ рдХреЗ рд▓рд┐рдП рддреИрдпрд╛рд░ рдмреИрдЧ
                </h3>
              </div>
              <div className="grid grid-cols-2 gap-4 md:gap-6">
                {[
                  { text: "рдорд╛рдБ рдХреЗ рдХрдкрдбрд╝реЗ", emoji: "ЁЯСЧ" },
                  { text: "рдмрдЪреНрдЪреЗ рдХреЗ рдХрдкрдбрд╝реЗ", emoji: "ЁЯСХ" },
                  { text: "рдЬрд░реВрд░реА рджрд╕реНрддрд╛рд╡реЗрдЬ", emoji: "ЁЯУД" },
                  { text: "рджрд╡рд╛рдЗрдпрд╛рдВ", emoji: "ЁЯТК" },
                  { text: "рдЯреЙрд╡рд▓ рдФрд░ рд╕рд╛рдмреБрди", emoji: "ЁЯз╝" },
                  { text: "рдкреИрд╕реЗ", emoji: "ЁЯТ░" }
                ].map((item, idx) => (
                  <div key={idx} className="flex items-center gap-3 p-3 bg-white/70 rounded-xl">
                    <span className="text-lg">{item.emoji}</span>
                    <p className="text-gray-700 font-noto text-sm md:text-base">
                      {item.text}
                    </p>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Fun Facts Section */}
        <div className="mt-8 md:mt-12 max-w-4xl mx-auto">
          <Card className="bg-gradient-to-r from-indigo-50 to-purple-50 border-indigo-200 border-2 rounded-2xl shadow-lg md:rounded-3xl">
            <CardContent className="p-6 text-center md:p-12">
              <div className="w-12 h-12 bg-gradient-to-r from-indigo-400 to-purple-400 rounded-full flex items-center justify-center mx-auto mb-4 md:w-16 md:h-16 md:mb-8">
                <span className="text-2xl">ЁЯОЙ</span>
              </div>
              <h3 className="font-bold text-lg text-gray-800 font-mukta mb-3 md:text-xl lg:text-2xl">
                рдЦреБрд╢рдЦрдмрд░реА!
              </h3>
              <p className="text-gray-600 text-sm font-noto leading-relaxed md:text-base lg:text-lg">
                рддреАрд╕рд░реА рддрд┐рдорд╛рд╣реА рдореЗрдВ рдмрдЪреНрдЪрд╛ рдкреВрд░реА рддрд░рд╣ рд╕реЗ рд╡рд┐рдХрд╕рд┐рдд рд╣реЛ рдЬрд╛рддрд╛ рд╣реИ рдФрд░ рдЬрд▓реНрдж рд╣реА рдЖрдк рдЕрдкрдиреЗ рдкреНрдпрд╛рд░реЗ рдмрдЪреНрдЪреЗ рд╕реЗ рдорд┐рд▓рдиреЗ рд╡рд╛рд▓реА рд╣реИрдВ!
              </p>
            </CardContent>
          </Card>
        </div>
      </div>

      <Downbar />
    </div>
  );
}
